heqet:
  defaults:
    project: "default"
    repoURL: https://github.com/nold360/heqet
    server: https://kubernetes.default.svc
    automated:
      prune: true
      selfHeal: false
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: nold@gnu.one

  apps:
    - name: heqet
      path: charts/heqet

      # We can even manage ArgoCD & declare values here :)
    - name: argocd
      repoURL: https://github.com/argoproj/argo-helm
      path: charts/argo-cd
      values: |
        dex:
          enabled: false
        server:
          ingress:
            enabled: true
            hosts:
              - argocd.heqet.gnu.one
            annotations:
              kubernetes.io/ingress.class: "nginx"
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt
          logLevel: debug
        controller:
          logLevel: debug
        repoServer:
          logLevel: debug

    - name: jaeger
      path: charts/jaeger
      repoURL: https://github.com/jaegertracing/helm-charts
      targetRevision: HEAD
      values: |-
        query:
          ingress:
            enabled: true
            hosts:
              - jaeger.heqet.gnu.one
            annotations:
              kubernetes.io/ingress.class: "nginx"
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt
            tls:
              - secretName: jaeger-cert
                hosts:
                  - jaeger.heqet.gnu.one

    - name: nginx-ingress
      repoURL: https://github.com/kubernetes/ingress-nginx
      path: charts/ingress-nginx
      parameters:
        - name: controller.admissionWebhooks.enabled
          value: false
        - name: controller.admissionWebhooks.patch.enabled
          value: false
        - name: rbac.create
          value: true
        - name: controller.publishService.enabled
          value: true
        - name: controller.image.repository
          value: bitnami/nginx-ingress-controller

    - name: cert-manager
      repoURL: https://github.com/jetstack/cert-manager
      path: deploy/charts/cert-manager
      parameters:
        - name: acme.server
          value: https://acme-v02.api.letsencrypt.org/directory
        - name: acme.email
          value: nold@gnu.one
        - name: installCRDs
          value: true
        - name: cainjector.image.tag
          value: v0.15.1
        - name: image.tag
          value: v0.15.1
        - name: webhook.image.tag
          value: v0.15.1
   
    - name: vault
      repoURL: https://github.com/hashicorp/vault-helm
      values: |-
        ui:
          enabled: true
        server:
          dev:
            enabled: true
          ingress:
            enabled: true
            hosts:
              - host: vault.heqet.gnu.one
            annotations:
              kubernetes.io/ingress.class: "nginx"
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt
            tls:
              - secretName: vault-cert
                hosts:
                  - vault.heqet.gnu.one

    - name: kubernetes-dashboard
      path: stable/kubernetes-dashboard
      repoURL: https://github.com/helm/charts
      values: |-
        ingress:
          enabled: true
          hosts:
            - dashboard.heqet.gnu.one
          annotations:
            kubernetes.io/ingress.class: "nginx"
            kubernetes.io/tls-acme: "true"
            cert-manager.io/cluster-issuer: letsencrypt
          tls:
            - secretName: kubedash-cert
              hosts:
                - dashboard.heqet.gnu.one

    - name: loki-stack
      path: charts/loki-stack
