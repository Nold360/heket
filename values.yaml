# Install Custom Ressource Definitions?
installCRDs: true

# Default values that are used for creating ArgoCD `Application` definitions
defaults:
  project: "heqet"
  server: https://kubernetes.default.svc
  automated:
    prune: true
    selfHeal: false

# Heqet Functions / Injectors:
generators:
  # Vault Secret Injector
  vault: true

# App Definitions that will be managed in ArgoCD
apps:
  # Heqet
  - name: heqet
    path: .
    repoURL: https://github.com/nold360/heqet
    targetRevision: test
    syncWave: "-1"
    selfHeal: true

  # ArgoCD - Continous Deployment from Git
  - name: argocd
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 3.2.2
    syncWave: "0"
    secrets:
      - name: argocd-secret
        keys:
          - admin.password
          - server.secretkey
   
  # Metal LoadBalancer
  - name: metallb
    repoURL: https://charts.bitnami.com/bitnami
    chart: metallb
    targetRevision: 2.3.6
    syncWave: "0"

  - name: cert-manager
    repoURL: https://charts.jetstack.io
    chart: cert-manager
    targetRevision: 1.3.0
    parameters:
      - name: installCRDs
        value: "true"
    secrets:
      - name: cert-manager-vault-approle
        keys:
          - secretId

  # NGINX Ingress - Internal
  - name: ingress-internal
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 3.29.0
    syncWave: "0"

   # NGINX Ingress - External
  - name: ingress-external
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 3.29.0
    syncWave: "0"

  # Vault
  - name: vault
    repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: 0.11.0
    syncWave: "-3"
    parameters:
      - name: ui.enabled
        value: "true"
      - name: global.psp.enabled
        value: "true"
      - name: server.networkPolicy.enabled
        value: "true"
      - name: server.dev.enabled
        value: "false"
      - name: standalone.enabled
        value: "true"

  # Vault Secret Operator for automatic Secret injection
  - name: vault-secrets-operator
    repoURL: https://ricoberger.github.io/helm-charts
    chart: vault-secrets-operator
    targetRevision: 1.14.2
    syncWave: "-2"

  # Loki / Grafana / Promtail Stack for Logging & Metrics
  - name: loki-stack
    repoURL: https://grafana.github.io/helm-charts
    chart: loki-stack
    targetRevision: 2.3.1
    secrets:
      - name: loki-stack-grafana
        keys:
          - admin-user
          - admin-password
 
  # KeyCloak
  - name: keycloak
    disabled: true
    repoURL: https://charts.bitnami.com/bitnami
    chart: keycloak
    targetRevision: 2.4.6
    secrets:
      - name: passwords
        keys:
          - adminPassword
          - managementPassword
          - databasePassword
          - tlsKeystorePassword
          - tlsTruststorePassword
      - name: postgres
        keys:
          - postgresql-password
          - postgresql-postgres-password


  # Container Registry
  - name: harbor
    disabled: true
    repoURL: https://charts.bitnami.com/bitnami
    chart: harbor
    targetRevision: 9.8.3

  # Object Storage
  - name: minio
    repoURL: https://charts.bitnami.com/bitnami
    chart: minio
    targetRevision: 6.7.2
    parameters:
    ignoreDiff:
    - group: apps
      kind: Secret
      namespace: minio
      jsonPointers:
        - /data/ca.crt
        - /data/tls.crt
        - /data/tls.key
    secrets:
      - name: minio-secret
        keys:
          - access-key
          - secret-key
 
  # PiHole
  - name: pihole
    repoURL: https://mojo2600.github.io/pihole-kubernetes
    chart: pihole
    targetRevision: 1.8.34
    secrets:
      - name: pihole-admin
        keys:
          - password

  # Backup Server
  - name: backup-lan
    repoURL: https://github.com/lib42/charts.git
    path: charts/borgserver
    targetRevision: dev

  - name: backup-dmz
    repoURL: https://github.com/lib42/charts.git
    path: charts/borgserver
    targetRevision: dev

  # Drone CI
  - name: drone
    repoURL: https://charts.drone.io
    chart: drone
    targetRevision: 0.1.7
    secrets:
      - name: drone-env
        keys:
          - DRONE_GITHUB_CLIENT_ID
          - DRONE_GITHUB_CLIENT_SECRET
          - DRONE_RPC_SECRET

  - name: drone-runner
    repoURL: https://charts.drone.io
    chart: drone-runner-kube
    targetRevision: 0.1.5
    secrets:
      - name: drone-env
        fromApp: drone
        keys:
          - DRONE_RPC_SECRET
    parameters:
      - name: extraSecretNamesForEnvFrom[0]
        value: "drone-env"
      - name: env.DRONE_NAMESPACE_DEFAULT
        value: drone-runner
      - name: env.DRONE_RPC_HOST
        value: drone.drone.svc.cluster.local
      - name: rbac.buildNamespaces[0]
        value: drone-runner

  # Apps...
  - name: folding
    #repoURL: https://pcktdmp.github.io/charts
    #chart: fahclient
    #targetRevision: 2.5.5
    repoURL: https://github.com/Nold360/charts-2/
    path: fahclient
    targetRevision: f_ingress
    parameters:
      - name: fahClient.user
        value: nold
      - name: fahClient.team
        value: "236833"
      - name: ingress.vhost
        value: folding.k3s
      - name: ingess.enabled
        value: "true"
      - name: resources.limits.cpu
        value: "8"
      - name: resources.limits.memory
        value: 1Gi

  # Polaris - Scan cluster for stuff
  - name: polaris
    repoURL: https://charts.fairwinds.com/stable
    chart: polaris
    targetRevision: 3.1.1

  # Deluge & OpenVPN-Client
  - name: deluge
    repoURL: https://github.com/lib42/charts.git
    path: charts/deluge-openvpn
    targetRevision: f_deluge
    secrets:
      - name: vpn-config
        keys:
          - ca.crt
          - auth.txt
          - client.ovpn
