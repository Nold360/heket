# Default values for wiki.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: requarks/wiki
  pullPolicy: IfNotPresent

serviceAccount:
  create: true

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

sideload:
  enabled: true
  env:
    - name: HTTPS_PROXY
      value: http://proxy-squid.proxy.svc.cluster.local:80

offlineMode: true

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: external
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt
  hosts:
    - host: nold.in
      paths: ["/"]
  tls:
  - secretName: noldin-tls
    hosts:
      - nold.in

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Configuration values for the postgresql dependency.
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
##
postgresql:
  ## Use the PostgreSQL chart dependency.
  ## Set to false if bringing your own PostgreSQL, and set secret value postgresql-uri.
  ##
  enabled: true
  ## ssl enforce SSL communication with PostgresSQL
  ## Default to false
  ##
  # ssl: false
  ## ca Certificate of Authority
  ## Default to empty, point to location of CA
  ##
  # ca: "path to ca"
  ## postgresqlHost override postgres database host
  ## Default to postgres
  ##
  # postgresqlHost: postgres
  ## postgresqlPort port for postgres
  ## Default to 5432
  ##
  # postgresqlPort: 5432
  ## PostgreSQL fullname Override
  ## Default to wiki-postgresql unless fullname override is set for Chart
  ##
  fullnameOverride: ""
  ## PostgreSQL User to create.
  ##
  postgresqlUser: postgres
  
  existingSecret: postgres
  existingSecretKey: password

  ## PostgreSQL Database to create.
  ##
  postgresqlDatabase: wiki
  ## Persistent Volume Storage configuration.
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  ##
  replication:
    ## Enable PostgreSQL replication (primary/secondary)
    ##
    enabled: false
  persistence:
    ## Enable PostgreSQL persistence using Persistent Volume Claims.
    ##
    enabled: true
    ## concourse data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ## Persistent Volume Access Mode.
    ##
    accessMode: ReadWriteOnce
    ## Persistent Volume Storage Size.
    ##
    size: 8Gi

